<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.spring.infrastructures.clickhouse.auth.mapper.TDepartmentRoleMapper">
  <resultMap id="BaseResultMap" type="org.example.spring.infrastructures.clickhouse.auth.table.po.TDepartmentRole">
    <!--@mbg.generated-->
    <!--@Table t_department_role-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    <result column="department_id" jdbcType="BIGINT" property="departmentId"/>
    <result column="role_id" jdbcType="BIGINT" property="roleId"/>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, create_id, update_id, create_user, update_user, create_date, update_date, department_id,
    role_id
  </sql>

  <select id="listRolesByDepartmentId"
          resultMap="org.example.spring.infrastructures.clickhouse.auth.mapper.TRoleMapper.BaseResultMap">
    select
    <include refid="org.example.spring.infrastructures.clickhouse.auth.mapper.TRoleMapper.Base_Column_List">
    </include>
    from t_role where id in (select role_id from t_department_role where department_id = #{departmentId,jdbcType=BIGINT})
  </select>
</mapper>