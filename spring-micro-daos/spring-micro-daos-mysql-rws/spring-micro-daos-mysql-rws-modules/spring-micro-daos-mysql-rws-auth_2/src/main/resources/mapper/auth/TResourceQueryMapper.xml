<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.example.spring.daos.mysql.auth.mapper.TResourceQueryMapper">
    <resultMap id="resource" type="org.example.spring.daos.mysql.auth.table.po.TResource">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="type" property="type"/>
        <result column="url" property="url"/>
        <result column="pid" property="pid"/>
        <result column="weight" property="weight"/>
        <result column="create_id" property="createId"/>
        <result column="update_id" property="updateId"/>
        <result column="create_user" property="createUser"/>
        <result column="update_user" property="updateUser"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
    </resultMap>

    <select id="queryListByRoleId" resultMap="resource">
        select id,
               create_id,
               update_id,
               create_user,
               update_user,
               create_date,
               update_date,
               name,
               type,
               url,
               pid,
               weight
        from t_resource where id in (select resource_id from t_role_resource where role_id=#{roleId,jdbcType=BIGINT})
    </select>
    <select id="queryListByUserId" resultMap="resource">
        select id,
        create_id,
        update_id,
        create_user,
        update_user,
        create_date,
        update_date,
        name,
        type,
        url,
        pid,
        weight
        from t_resource
        where id in (select user_id from t_user_role where role_id in (select role_id from t_user_role where user_id = #{userId,jdbcType=BIGINT}))
    </select>
</mapper>